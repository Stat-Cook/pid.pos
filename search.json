[{"path":"https://stat-cook.github.io/pid.pos/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 pid.pos authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://stat-cook.github.io/pid.pos/articles/FolderReport.html","id":"the-pid-pos-report","dir":"Articles","previous_headings":"","what":"The PID.POS report","title":"Reporting on every file in a folder","text":"common struggle research data controllers can gain level confidence large data sets don’t contain personally identifiable data. cases, job requires brief inspection columns often contain PID name, ID obvious. However, data sets can contain broad free text fields, fields needed small number cases, may shifted - placing PID harder detect locations. data sets consist ~10,000 observations manual inspection rare PID limited chance finding problems, let alone resource cost required pass data. help overcome issues, part PID.POS package implemented API automated production proper noun reports files found within directory. intention collection data sets required transfer, can placed single location, reports generated. demonstrate function works - supplied collection data sets featuring free text package. free text data draws janeaustenr package - constructing three csv files: Emma.csv PridePrejudice.csv SenseSensability.csv file consisting 1000 rows four columns (primary key, line text book, reference category, string-length text). first step processing data identify files local folder structure: check files intended data: generate reports call report_on_folder takes three arguments: data_path - path data directory report_dir - system path proper noun reports saved to_remove [optional] - vector columns ignored e.g. primary keys. evaluated report_dir folder gets populated set csv files, one per data set found data_path: files consists 5 columns: doc_id - reference proper noun detected token - proper noun detected sentence - full free text field Repeats - many times sentence appeared data set Affected Columns - columns sentence occured .","code":"library(pid.pos)  data_path <- system.file(\"vignette_data\", package = \"pid.pos\") list.files(data_path) #> [1] \"Emma.csv\"             \"PridePrejudice.csv\"   \"SenseSensability.csv\" #> [4] \"Temp.csv\" emma.csv <- system.file(\"vignette_data\", \"Emma.csv\", package = \"pid.pos\") kable(read.csv(emma.csv, nrows = 5)) report_on_folder(data_path, report_dir = \"Proper Noun Report\") browseURL(\"Proper Noun Report\") read.csv(\"Proper Noun Report/Emma.csv\")"},{"path":"https://stat-cook.github.io/pid.pos/articles/PaperVignette.html","id":"summary","dir":"Articles","previous_headings":"","what":"Summary","title":"PID.POS: An R package for the detection of personally identifiable data","text":"PID.POS package designed aid identification personal identifiability risks data sets. applying existing natural language processing techniques, package able identify proper nouns within data set. extraction proper nouns reduced complexity data, allowing quicker review oversight data. package also includes basic tool design, implementation redaction process.","code":""},{"path":"https://stat-cook.github.io/pid.pos/articles/PaperVignette.html","id":"statement-of-need","dir":"Articles","previous_headings":"","what":"Statement of need","title":"PID.POS: An R package for the detection of personally identifiable data","text":"world embedded data revolution. Never depth breadth data captured analysed present, set increase. response, international bodies taking steps ensure legal protection individual’s rights data (European Parliament Council European Union 2016). One effect increase legislation growing awareness role responsibility data controllers (ICO, n.d.b) risks big data (Clarke 2016). Among concerns, risk ‘personal identifiability’ .e. ability directly indirectly identify individual dataset (Finck Pallas 2020), paramount , breeched, can lead reputation damage fines (ICO, n.d.). data structured comprises hundred observations, manual inspection can identify variables contain directly personally identifiable data (PID) reasonable time investment. However, case modern large data sets may comprise millions observations, manual inspection may miss PID embedded within passage text, rarity given variable. PID.POS (Personal Identifiability Detection Part Speech tagging) package designed aid identification PID risks data sets. comparison existing packages rely curated list common names string-matching, PID.POS builds existing udpipe framework, extracting examples proper nouns providing mechanism review redaction PID risks.","code":""},{"path":"https://stat-cook.github.io/pid.pos/articles/PaperVignette.html","id":"comparison-to-existing-r-packages","dir":"Articles","previous_headings":"","what":"Comparison to existing R packages","title":"PID.POS: An R package for the detection of personally identifiable data","text":"need review data sets identify risks new, number packages developed aid process. notable PII package (Patterson-Stein 2025), designed identify personally identifiable features via pattern matching. approaches can effective identifying PID, risk missing edge cases e.g. relying sentence case identify names. approach taken PID.POS conversely takes approach purposefully extracting proper-nouns, hence increase false positive rate, intention supplying simplified extract aid human interpretation rather fully automate .","code":""},{"path":"https://stat-cook.github.io/pid.pos/articles/PaperVignette.html","id":"in-practice","dir":"Articles","previous_headings":"","what":"In practice","title":"PID.POS: An R package for the detection of personally identifiable data","text":"install current version PID.POS package, use following code: assist understanding PID.POS package, include subset ‘friends’ data set friends package. package two main functions identifying PID risks, depending users needs. First, data_frame_report function converts typical R data frame new data frame : Sentence - sentence containing proper nouns Token - specific proper noun token Repeats - number times sentence occurs data set Affected Columns - columns original data frame contain sentence ID - column row sentence first appears second function report_on_folder iterates folder data files, producing proper noun report . foreseen function useful, used just data release evidence PID risks. NB: data_frame_report report_on_folder functions automate download pre-trained udpipe model. models required cached users hard-drive hence firewall issues may present. vignette … included help common issues. able identify PID risks core premise package, remiss supply tools aid removal PID. Hence, supply basic functionality designed minimal technical knowledge assist redaction PID. PID report ran, resulting data frame can passed function report_as_rules_template convert report csv file three headings: - sentence pattern , matches, replacement applied - pattern replaced - intended replacement csv file intended edited data controller, hence need understand R, can reimported using template_to_rules function: template_to_rules function creates string replacement rule capture desired redactions, option R ‘parse’ function use part data pipeline: advanced user, template_to_rules function utilizes str_detect str_replace_all functions stringr package, hence supports regex.","code":"# install.packages(\"pak\") pak::pkg_install(\"Stat-Cook/PID.POS\") library(pid.pos) library(dplyr) glimpse(the_one_in_massapequa) ## Rows: 257 ## Columns: 4 ## $ scene     <int> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, … ## $ utterance <int> 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 1… ## $ speaker   <chr> \"Scene Directions\", \"Phoebe Buffay\", \"Monica Geller\", \"Ross … ## $ text      <chr> \"[Scene: Central Perk, everyone is there.]\", \"Oh, Ross, Mon,… report <- data_frame_report(the_one_in_massapequa) report report_on_folder(\"path/to/data/\") browse_model_location() report_as_rules_template(report, path = \"path/to/report.csv\") template_to_rules(\"path/to/report.csv\") replacement.func <- template_to_rules(\"path/to/report.csv\", parse = T)  the_one_in_massapequa |>   mutate(     across(       where(is.character),       replacement.func     )   )"},{"path":"https://stat-cook.github.io/pid.pos/articles/PaperVignette.html","id":"current-applications","dir":"Articles","previous_headings":"","what":"Current applications","title":"PID.POS: An R package for the detection of personally identifiable data","text":"PID.POS package developed applications NuRS AmReS research projects aim extract analyse retrospective operational data NHS Trusts understand staff retention patient safety.","code":""},{"path":"https://stat-cook.github.io/pid.pos/articles/PaperVignette.html","id":"contributions","dir":"Articles","previous_headings":"","what":"Contributions","title":"PID.POS: An R package for the detection of personally identifiable data","text":"package designed RC …. Implementation done RC. Quality assurance done … Documentation written RC…. Funding work won RC SJ.","code":""},{"path":"https://stat-cook.github.io/pid.pos/articles/PaperVignette.html","id":"acknowledgements","dir":"Articles","previous_headings":"","what":"Acknowledgements","title":"PID.POS: An R package for the detection of personally identifiable data","text":"development PID.POS part NuRS AmReS projects funded Health Foundation.","code":""},{"path":[]},{"path":"https://stat-cook.github.io/pid.pos/articles/udpipe-model.html","id":"step-1","dir":"Articles","previous_headings":"","what":"Step 1","title":"Trouble shooting the UDpipe Model","text":"first installed loaded PID.POS udpipe model. first time data_frame_report run, attempt made download model. Hence, recommended start evaluating data_frame_report function example data (the_one_in_massapequa): model downloaded, error thrown signposting functions browse_model_location browse_udpipe_repo.","code":"library(pid.pos)  report <- data_frame_report(the_one_in_massapequa) browse_udpipe_repo() browse_model_location()"},{"path":"https://stat-cook.github.io/pid.pos/articles/udpipe-model.html","id":"step-2","dir":"Articles","previous_headings":"","what":"Step 2","title":"Trouble shooting the UDpipe Model","text":"Assuming data_frame_report throws error, next step check model present. can done running browse_model_location() checking file named ‘english-ewt-ud-2.5-191206.udpipe’ similar. user permission write location, model downloaded browse_model_location may throw error. happens, two approaches suggest: Contact system administrator either grant permissions add udpipe model location e.g. running code behalf. Change default model location using set_model_folder('new/path'). former reliable, allow PID.POS operate intended future sessions. latter temporary fix, need repeated time package loaded.","code":""},{"path":"https://stat-cook.github.io/pid.pos/articles/udpipe-model.html","id":"step-3","dir":"Articles","previous_headings":"","what":"Step 3","title":"Trouble shooting the UDpipe Model","text":"Assuming user permission read write model location, next possibility user behind firewall. case, two steps consider: Contact team ask allow downloads github.com Navigate udpipe repository via browse_udpipe_repo() download model manually. need deposited folder opened browse_model_location().","code":""},{"path":"https://stat-cook.github.io/pid.pos/articles/udpipe-model.html","id":"step-4","dir":"Articles","previous_headings":"","what":"Step 4","title":"Trouble shooting the UDpipe Model","text":"problems persist please raise issue PID.POS github page. striving expand document new problems/ solutions present.","code":""},{"path":"https://stat-cook.github.io/pid.pos/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Robert Cook. Author, maintainer.","code":""},{"path":"https://stat-cook.github.io/pid.pos/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Cook R (2025). pid.pos: PID detection via NLP. R package version 0.1.0, https://stat-cook.github.io/pid.pos/.","code":"@Manual{,   title = {pid.pos: PID detection via NLP},   author = {Robert Cook},   year = {2025},   note = {R package version 0.1.0},   url = {https://stat-cook.github.io/pid.pos/}, }"},{"path":"https://stat-cook.github.io/pid.pos/index.html","id":"pidpos","dir":"","previous_headings":"","what":"PID detection via NLP","title":"PID detection via NLP","text":"package tools detection personally identifiable data (PID) data sets via natural language processing. Considers risk PID data set contains text element considered ‘proper noun’. install github straight R, use: point entry users report_on_folder function. function designed allow checking multiple data files shared folder structure. top level folder path given 1st argument report_on_folder, function iterates file (csv, xls, xlsx) checking proper nouns (NB: present checks first sheet excel files). variables contain proper nouns summarized excel report file name raw data file - listing proper noun detected, context variables data set contained .","code":"devtools::install_github(\"Stat-Cook/pid.pos\")"},{"path":"https://stat-cook.github.io/pid.pos/index.html","id":"troubleshooting","dir":"","previous_headings":"","what":"Troubleshooting","title":"PID detection via NLP","text":"package built UDPipe tree banks via udpipe R package. Fetching appropriate udpipe model intended automatic, however issues worth looking functions browse_udpipe_repo browse_model_location.","code":""},{"path":"https://stat-cook.github.io/pid.pos/paper.html","id":null,"dir":"","previous_headings":"","what":"Summary","title":"Summary","text":"PID.POS package designed aid identification personal identifiability risks data sets. applying existing natural language processing techniques, package able identify proper nouns within data set. extraction proper nouns reduced complexity data, allowing quicker review oversight data. package also includes basic tool design, implementation redaction process.","code":""},{"path":"https://stat-cook.github.io/pid.pos/paper.html","id":"statement-of-need","dir":"","previous_headings":"","what":"Statement of need","title":"Summary","text":"world embedded data revolution. Never depth breadth data captured analysed present, set increase. response, international bodies taking steps ensure legal protection individual’s rights data [@GDPR]. One effect increase legislation growing awareness role responsibility data controllers [@ICODataController] risks big data [@clarke2016big]. Among concerns, risk ‘personal identifiability’ .e. ability directly indirectly identify individual dataset [@finck2020they], paramount , breeched, can lead reputation damage fines [@ICOWhatIf]. data structured comprises hundred observations, manual inspection can identify variables contain directly personally identifiable data (PID) reasonable time investment. However, case modern large data sets may comprise millions observations, manual inspection may miss PID embedded within passage text, rarity given variable. PID.POS (Personal Identifiability Detection Part Speech tagging) package designed aid identification PID risks data sets. comparison existing packages rely curated list common names string-matching, PID.POS builds existing udpipe framework, extracting examples proper nouns providing mechanism review redaction PID risks.","code":""},{"path":"https://stat-cook.github.io/pid.pos/paper.html","id":"comparison-to-existing-r-packages","dir":"","previous_headings":"","what":"Comparison to existing R packages","title":"Summary","text":"need review data sets identify risks new, number packages developed aid process. notable PII package [@pii], designed identify personally identifiable features via pattern matching. approaches can effective identifying PID, risk missing edge cases e.g. relying sentence case identify names. approach taken PID.POS conversely takes approach purposefully extracting proper-nouns, hence increase false positive rate, intention supplying simplified extract aid human interpretation rather fully automate .","code":""},{"path":"https://stat-cook.github.io/pid.pos/paper.html","id":"in-practice","dir":"","previous_headings":"","what":"In practice","title":"Summary","text":"install current version PID.POS package, use following code: assist understanding PID.POS package, include subset ‘friends’ data set friends package. package two main functions identifying PID risks, depending users needs. First, data_frame_report function converts typical R data frame new data frame : Sentence - sentence containing proper nouns Token - specific proper noun token Repeats - number times sentence occurs data set Affected Columns - columns original data frame contain sentence ID - column row sentence first appears second function report_on_folder iterates folder data files, producing proper noun report . foreseen function useful, used just data release evidence PID risks. NB: data_frame_report report_on_folder functions automate download pre-trained udpipe model. models required cached users hard-drive hence firewall issues may present. vignette … included help common issues. able identify PID risks core premise package, remiss supply tools aid removal PID. Hence, supply basic functionality designed minimal technical knowledge assist redaction PID. PID report ran, resulting data frame can passed function report_as_rules_template convert report csv file three headings: - sentence pattern , matches, replacement applied - pattern replaced - intended replacement csv file intended edited data controller, hence need understand R, can reimported using template_to_rules function: template_to_rules function creates string replacement rule capture desired redactions, option R ‘parse’ function use part data pipeline: advanced user, template_to_rules function utilizes str_detect str_replace_all functions stringr package, hence supports regex.","code":"# install.packages(\"pak\") pak::pkg_install(\"Stat-Cook/PID.POS\") library(pid.pos) library(dplyr) glimpse(the_one_in_massapequa) ## Rows: 257 ## Columns: 4 ## $ scene     <int> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, … ## $ utterance <int> 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 1, 2, 3, 4, 5, 6, 7, 8, 9, … ## $ speaker   <chr> \"Scene Directions\", \"Phoebe Buffay\", \"Monica Geller\", \"Ross Geller\", \"Joey Tribbiani\", \"Ph… ## $ text      <chr> \"[Scene: Central Perk, everyone is there.]\", \"Oh, Ross, Mon, is it okay if I bring someone… report <- data_frame_report(the_one_in_massapequa) report report_on_folder('path/to/data/') browse_model_location() report_as_rules_template(report, path='path/to/report.csv') template_to_rules('path/to/report.csv') replacement.func <- template_to_rules('path/to/report.csv', parse=T)  the_one_in_massapequa |>   mutate(     across(       where(is.character),       replacement.func     )   )"},{"path":"https://stat-cook.github.io/pid.pos/paper.html","id":"current-applications","dir":"","previous_headings":"","what":"Current applications","title":"Summary","text":"PID.POS package developed applications NuRS AmReS research projects aim extract analyse retrospective operational data NHS Trusts understand staff retention patient safety.","code":""},{"path":"https://stat-cook.github.io/pid.pos/paper.html","id":"contributions","dir":"","previous_headings":"","what":"Contributions","title":"Summary","text":"package designed RC …. Implementation done RC. Quality assurance done … Documentation written RC…. Funding work won RC SJ.","code":""},{"path":"https://stat-cook.github.io/pid.pos/paper.html","id":"acknowledgements","dir":"","previous_headings":"","what":"Acknowledgements","title":"Summary","text":"development PID.POS part NuRS AmReS projects funded Health Foundation.","code":""},{"path":[]},{"path":"https://stat-cook.github.io/pid.pos/reference/browse_model_location.html","id":null,"dir":"Reference","previous_headings":"","what":"Browse user to folder for UDPipe models. — browse_model_location","title":"Browse user to folder for UDPipe models. — browse_model_location","text":"Intended usage `udpipe` fails download automatically.","code":""},{"path":"https://stat-cook.github.io/pid.pos/reference/browse_model_location.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Browse user to folder for UDPipe models. — browse_model_location","text":"","code":"browse_model_location()"},{"path":"https://stat-cook.github.io/pid.pos/reference/browse_udpipe_repo.html","id":null,"dir":"Reference","previous_headings":"","what":"Open github link to the 'english-ewt-2.5' UD model. — browse_udpipe_repo","title":"Open github link to the 'english-ewt-2.5' UD model. — browse_udpipe_repo","text":"Intended user download `udpipe` fails download automatically.","code":""},{"path":"https://stat-cook.github.io/pid.pos/reference/browse_udpipe_repo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Open github link to the 'english-ewt-2.5' UD model. — browse_udpipe_repo","text":"","code":"browse_udpipe_repo()"},{"path":"https://stat-cook.github.io/pid.pos/reference/data_frame_report.html","id":null,"dir":"Reference","previous_headings":"","what":"Tags a data frame with part of speech tags. — data_frame_report","title":"Tags a data frame with part of speech tags. — data_frame_report","text":"Tags data frame part speech tags.","code":""},{"path":"https://stat-cook.github.io/pid.pos/reference/data_frame_report.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tags a data frame with part of speech tags. — data_frame_report","text":"","code":"data_frame_report(frm, chunk_size = 100, to_remove = c())"},{"path":"https://stat-cook.github.io/pid.pos/reference/data_frame_report.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tags a data frame with part of speech tags. — data_frame_report","text":"frm data frame tag chunk_size number sentences tag time to_remove character vector column names remove data frame","code":""},{"path":"https://stat-cook.github.io/pid.pos/reference/data_frame_tagger.html","id":null,"dir":"Reference","previous_headings":"","what":"Tags a data frame with part of speech tags. — data_frame_tagger","title":"Tags a data frame with part of speech tags. — data_frame_tagger","text":"Tags data frame part speech tags.","code":""},{"path":"https://stat-cook.github.io/pid.pos/reference/data_frame_tagger.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tags a data frame with part of speech tags. — data_frame_tagger","text":"","code":"data_frame_tagger(frm, chunk_size = 100, to_remove = c())"},{"path":"https://stat-cook.github.io/pid.pos/reference/data_frame_tagger.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tags a data frame with part of speech tags. — data_frame_tagger","text":"frm data frame tag chunk_size number sentences tag time to_remove character vector column names remove data frame","code":""},{"path":"https://stat-cook.github.io/pid.pos/reference/find_files.html","id":null,"dir":"Reference","previous_headings":"","what":"List all files in a directory with a given extension — find_files","title":"List all files in a directory with a given extension — find_files","text":"List files directory given extension","code":""},{"path":"https://stat-cook.github.io/pid.pos/reference/find_files.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List all files in a directory with a given extension — find_files","text":"","code":"find_files(path, extensions = get_implemented_extensions(), .lis = list())"},{"path":"https://stat-cook.github.io/pid.pos/reference/find_files.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List all files in a directory with a given extension — find_files","text":"path path search files extensions character vector file extensions search .lis list file paths","code":""},{"path":"https://stat-cook.github.io/pid.pos/reference/find_files.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List all files in a directory with a given extension — find_files","text":"list file paths","code":""},{"path":"https://stat-cook.github.io/pid.pos/reference/longer_than.html","id":null,"dir":"Reference","previous_headings":"","what":"Produces a function that checks if any strings in a vector is longer than 'limit' — longer_than","title":"Produces a function that checks if any strings in a vector is longer than 'limit' — longer_than","text":"Produces function checks strings vector longer 'limit'","code":""},{"path":"https://stat-cook.github.io/pid.pos/reference/longer_than.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Produces a function that checks if any strings in a vector is longer than 'limit' — longer_than","text":"","code":"longer_than(limit = 5)"},{"path":"https://stat-cook.github.io/pid.pos/reference/longer_than.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Produces a function that checks if any strings in a vector is longer than 'limit' — longer_than","text":"limit length check ","code":""},{"path":"https://stat-cook.github.io/pid.pos/reference/longer_than.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Produces a function that checks if any strings in a vector is longer than 'limit' — longer_than","text":"","code":"longer_than_5 <- longer_than(5) .str <- c(\"ABCDE\", \"ABC\", \"ABCDEFG\") longer_than_5(.str) #> [1] TRUE"},{"path":"https://stat-cook.github.io/pid.pos/reference/read_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Reads a data file — read_data","title":"Reads a data file — read_data","text":"Reads data file","code":""},{"path":"https://stat-cook.github.io/pid.pos/reference/read_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reads a data file — read_data","text":"","code":"read_data(file_path, ...)"},{"path":"https://stat-cook.github.io/pid.pos/reference/read_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reads a data file — read_data","text":"file_path path file read ... Additional arguments pass read function","code":""},{"path":"https://stat-cook.github.io/pid.pos/reference/report_as_rules_template.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert the output of `data_frame_report` to a csv file for editing. It is intended the user changes the `To` column to define desired replacements. — report_as_rules_template","title":"Convert the output of `data_frame_report` to a csv file for editing. It is intended the user changes the `To` column to define desired replacements. — report_as_rules_template","text":"Convert output `data_frame_report` csv file editing. intended user changes `` column define desired replacements.","code":""},{"path":"https://stat-cook.github.io/pid.pos/reference/report_as_rules_template.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert the output of `data_frame_report` to a csv file for editing. It is intended the user changes the `To` column to define desired replacements. — report_as_rules_template","text":"","code":"report_as_rules_template(report, path = NULL)"},{"path":"https://stat-cook.github.io/pid.pos/reference/report_as_rules_template.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert the output of `data_frame_report` to a csv file for editing. It is intended the user changes the `To` column to define desired replacements. — report_as_rules_template","text":"report 'report' generated `data_frame_report` path File path write.","code":""},{"path":"https://stat-cook.github.io/pid.pos/reference/report_on_folder.html","id":null,"dir":"Reference","previous_headings":"","what":"Itterates over a folder of data files and produces a report on proper nouns. — report_on_folder","title":"Itterates over a folder of data files and produces a report on proper nouns. — report_on_folder","text":"Itterates folder data files produces report proper nouns.","code":""},{"path":"https://stat-cook.github.io/pid.pos/reference/report_on_folder.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Itterates over a folder of data files and produces a report on proper nouns. — report_on_folder","text":"","code":"report_on_folder(   data_path,   report_dir = \"Proper Noun Reports\",   to_remove = c() )"},{"path":"https://stat-cook.github.io/pid.pos/reference/report_on_folder.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Itterates over a folder of data files and produces a report on proper nouns. — report_on_folder","text":"data_path path data files report_dir directory save reports to_remove character vector column names remove data frame","code":""},{"path":"https://stat-cook.github.io/pid.pos/reference/sentence_frm.html","id":null,"dir":"Reference","previous_headings":"","what":"A short data frame of free text including PID. Used for basic examples and tests. — sentence_frm","title":"A short data frame of free text including PID. Used for basic examples and tests. — sentence_frm","text":"short data frame free text including PID.  Used basic examples tests.","code":""},{"path":"https://stat-cook.github.io/pid.pos/reference/sentence_frm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A short data frame of free text including PID. Used for basic examples and tests. — sentence_frm","text":"","code":"sentence_frm"},{"path":"https://stat-cook.github.io/pid.pos/reference/sentence_frm.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A short data frame of free text including PID. Used for basic examples and tests. — sentence_frm","text":"data frame 5 rows 4 columns: ID row number (integer) Sentence free text detect PID . Numeric Example numeric data (discrete) ignored algorithm Random Example numeric data (continuous) ignored algorithm","code":""},{"path":"https://stat-cook.github.io/pid.pos/reference/template_to_rules.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a 'replacement tempalte' as defined with `report_as_rules_template` to a function that can be used to modify a data frame. — template_to_rules","title":"Convert a 'replacement tempalte' as defined with `report_as_rules_template` to a function that can be used to modify a data frame. — template_to_rules","text":"Convert 'replacement tempalte' defined `report_as_rules_template` function can used modify data frame.","code":""},{"path":"https://stat-cook.github.io/pid.pos/reference/template_to_rules.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a 'replacement tempalte' as defined with `report_as_rules_template` to a function that can be used to modify a data frame. — template_to_rules","text":"","code":"template_to_rules(path, parse = F)"},{"path":"https://stat-cook.github.io/pid.pos/reference/template_to_rules.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a 'replacement tempalte' as defined with `report_as_rules_template` to a function that can be used to modify a data frame. — template_to_rules","text":"path File path read. parse Binary-flag.  True replacement function parsed.","code":""},{"path":"https://stat-cook.github.io/pid.pos/reference/the_one_in_massapequa.html","id":null,"dir":"Reference","previous_headings":"","what":"The One in Massapequa — the_one_in_massapequa","title":"The One in Massapequa — the_one_in_massapequa","text":"subset 'Friends' data set containing scene, utterance, speaker text episode 'One Massapequa' (s8e18).","code":""},{"path":"https://stat-cook.github.io/pid.pos/reference/the_one_in_massapequa.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The One in Massapequa — the_one_in_massapequa","text":"","code":"the_one_in_massapequa"},{"path":"https://stat-cook.github.io/pid.pos/reference/the_one_in_massapequa.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"The One in Massapequa — the_one_in_massapequa","text":"data frame 3,100 rows 6 columns: scene scene number (integer) utterance utterance--scene number (integer) speaker speaker utterance (character) text text utterance (character)","code":""}]
